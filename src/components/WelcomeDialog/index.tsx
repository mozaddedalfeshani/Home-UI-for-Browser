"use client";

import { useState } from "react";
import { Search, Settings, Brain, Clock, FileText, Plus, ArrowRight, Sparkles } from "lucide-react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useSettingsStore } from "@/store/settingsStore";

interface WelcomeDialogProps {
  open: boolean;
}

export function WelcomeDialog({ open }: WelcomeDialogProps) {
  const { setHasSeenWelcome } = useSettingsStore();
  const [currentStep, setCurrentStep] = useState(0);

  const handleGetStarted = () => {
    setHasSeenWelcome(true);
  };

  const features = [
    {
      icon: Search,
      title: "ржжрзНрж░рзБржд ржЕржирзБрж╕ржирзНржзрж╛ржи",
      description: "ржХрзАржмрзЛрж░рзНржбрзЗ '/' ржЪрж╛ржкрзБржи ржПржмржВ Google ржП ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи ржмрж╛ URL ржП ржпрж╛ржи",
      shortcut: "/"
    },
    {
      icon: Brain,
      title: "AI рж╕рж╣рж╛ржпрж╝рждрж╛",
      description: "рж╕рзЗржЯрж┐ржВрж╕рзЗ AI ржЪрж╛рж▓рзБ ржХрж░рзЗ рж╕рзНржорж╛рж░рзНржЯ ржЯрзЗржХрзНрж╕ржЯ рж╕рж╛ржЬрзЗрж╢ржи ржкрж╛ржи",
      shortcut: "рж╕рзЗржЯрж┐ржВрж╕ тЖТ AI Search"
    },
    {
      icon: Plus,
      title: "ржЯрзНржпрж╛ржм ржпрзЛржЧ ржХрж░рзБржи",
      description: "ржкржЫржирзНржжрзЗрж░ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ ржпрзЛржЧ ржХрж░рзБржи ржПржмржВ ржХрзАржмрзЛрж░рзНржб рж╢рж░рзНржЯржХрж╛ржЯ рж╕рзЗржЯ ржХрж░рзБржи",
      shortcut: "+ ржмрзЛрждрж╛ржо"
    },
    {
      icon: Clock,
      title: "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржШржбрж╝рж┐",
      description: "рж╕рзЗржЯрж┐ржВрж╕рзЗ ржШржбрж╝рж┐рж░ рж░ржЩ, ржЕржмрж╕рзНржерж╛ржи ржПржмржВ ржлрж░ржорзНржпрж╛ржЯ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
      shortcut: "рж╕рзЗржЯрж┐ржВрж╕ тЖТ Clock"
    },
    {
      icon: FileText,
      title: "ржирзЛржЯржкрзНржпрж╛ржб",
      description: "ржбрж╛ржи ржкрж╛рж╢рзЗ ржирзЛржЯ рж▓рж┐ржЦрзБржи ржПржмржВ ржкрзНрж░ржЬрзЗржХрзНржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзБржи",
      shortcut: "ржбрж╛ржи рж╕рж╛ржЗржбржмрж╛рж░"
    },
    {
      icon: Settings,
      title: "ржХрж╛рж╕рзНржЯржорж╛ржЗржЬрзЗрж╢ржи",
      description: "ржерж┐ржо, ржнрж╛рж╖рж╛, ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб ржЗржорзЗржЬ ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
      shortcut: "ржирж┐ржЪрзЗ ржбрж╛ржи ржХрзЛржгрзЗ тЪЩя╕П"
    }
  ];

  if (!open) return null;

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-background/95 backdrop-blur-sm">
      <div className="w-full max-w-6xl p-6">
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-2 mb-4">
            <Sparkles className="h-8 w-8 text-primary" />
            <h1 className="text-4xl font-bold text-foreground">MCLX Home ржП рж╕рзНржмрж╛ржЧрждржо</h1>
          </div>
          <p className="text-xl text-muted-foreground mb-2">
            ржЖржкржирж╛рж░ ржмрзНржпржХрзНрждрж┐ржЧржд ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб
          </p>
          <p className="text-muted-foreground">
            ржжрзНрж░рзБржд ржЕржирзБрж╕ржирзНржзрж╛ржи, AI рж╕рж╣рж╛ржпрж╝рждрж╛, ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ ржХрж┐ржЫрзБ
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
          {features.map((feature, index) => {
            const Icon = feature.icon;
            return (
              <Card key={index} className="hover:shadow-lg transition-all duration-200">
                <CardHeader className="pb-3">
                  <div className="flex items-center gap-3">
                    <div className="p-2 rounded-lg bg-primary/10">
                      <Icon className="h-5 w-5 text-primary" />
                    </div>
                    <div>
                      <CardTitle className="text-lg">{feature.title}</CardTitle>
                      <div className="text-xs bg-muted px-2 py-1 rounded-md mt-1 inline-block">
                        {feature.shortcut}
                      </div>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="pt-0">
                  <CardDescription className="text-sm">
                    {feature.description}
                  </CardDescription>
                </CardContent>
              </Card>
            );
          })}
        </div>

        <div className="bg-muted/50 rounded-lg p-6 mb-8">
          <h3 className="text-lg font-semibold mb-3 text-center">ЁЯЪА ржжрзНрж░рзБржд рж╢рзБрж░рзБ ржХрж░рзБржи</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div className="flex items-start gap-3">
              <div className="w-6 h-6 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-xs font-bold">1</div>
              <div>
                <p className="font-medium">ржХрзАржмрзЛрж░рзНржбрзЗ '/' ржЪрж╛ржкрзБржи</p>
                <p className="text-muted-foreground">ржжрзНрж░рзБржд ржЕржирзБрж╕ржирзНржзрж╛ржи ржмрж╛ URL ржП ржпрж╛ржи</p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <div className="w-6 h-6 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-xs font-bold">2</div>
              <div>
                <p className="font-medium">ржирж┐ржЪрзЗ ржбрж╛ржи ржХрзЛржгрзЗ тЪЩя╕П ржЪрж╛ржкрзБржи</p>
                <p className="text-muted-foreground">рж╕рзЗржЯрж┐ржВрж╕ ржЦрзБрж▓рзБржи ржПржмржВ ржХрж╛рж╕рзНржЯржорж╛ржЗржЬ ржХрж░рзБржи</p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <div className="w-6 h-6 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-xs font-bold">3</div>
              <div>
                <p className="font-medium">+ ржмрзЛрждрж╛ржорзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи</p>
                <p className="text-muted-foreground">ржкржЫржирзНржжрзЗрж░ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ ржпрзЛржЧ ржХрж░рзБржи</p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <div className="w-6 h-6 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-xs font-bold">4</div>
              <div>
                <p className="font-medium">AI ржЪрж╛рж▓рзБ ржХрж░рзБржи</p>
                <p className="text-muted-foreground">рж╕рзНржорж╛рж░рзНржЯ ржЯрзЗржХрзНрж╕ржЯ рж╕рж╛ржЬрзЗрж╢ржи ржкрж╛ржи</p>
              </div>
            </div>
          </div>
        </div>

        <div className="text-center">
          <Button onClick={handleGetStarted} size="lg" className="gap-2">
            рж╢рзБрж░рзБ ржХрж░рзБржи
            <ArrowRight className="h-4 w-4" />
          </Button>
          <p className="text-xs text-muted-foreground mt-3">
            ржЖржкржирж┐ ржпрзЗржХрзЛржирзЛ рж╕ржоржпрж╝ рж╕рзЗржЯрж┐ржВрж╕ ржерзЗржХрзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи
          </p>
        </div>
      </div>
    </div>
  );
}
